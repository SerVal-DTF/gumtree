Previous File: OUTPUT/commons-io/prevFiles/prev_e47d34src#java#org#apache#commons#io#EndianUtils.java
Revised File: OUTPUT/commons-io/revFiles/e47d34src#java#org#apache#commons#io#EndianUtils.java
DiffEntry: @@ -2,3 +2,3 @@
  * Copyright 2001-2004 The Apache Software Foundation.
- * 
+ *
  * Licensed under the Apache License, Version 2.0 (the "License");

@@ -6,5 +6,5 @@
  * You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software

@@ -28,6 +28,5 @@
  * @author <a href="mailto:peter@apache.org">Peter Donald</a>
- * @version CVS $Revision: 1.14 $ $Date: 2004/06/13 04:45:25 $
+ * @version CVS $Revision: 1.15 $ $Date: 2004/10/24 04:20:06 $
  */
-public class EndianUtils
-{
+public class EndianUtils {
 

@@ -45,5 +44,4 @@
      */
-    public static short swapShort( short value )
-    {
-        return (short)( ( ( ( value >> 0 ) & 0xff ) << 8 ) +
+    public static short swapShort(short value) {
+        return (short) ( ( ( ( value >> 0 ) & 0xff ) << 8 ) +
             ( ( ( value >> 8 ) & 0xff ) << 0 ) );

@@ -56,4 +54,3 @@
      */
-    public static int swapInteger( int value )
-    {
+    public static int swapInteger(int value) {
         return

@@ -70,4 +67,3 @@
      */
-    public static long swapLong( long value )
-    {
+    public static long swapLong(long value) {
         return

@@ -88,4 +84,3 @@
      */
-    public static float swapFloat( float value )
-    {
+    public static float swapFloat(float value) {
         return Float.intBitsToFloat( swapInteger( Float.floatToIntBits( value ) ) );

@@ -98,4 +93,3 @@
      */
-    public static double swapDouble( double value )
-    {
+    public static double swapDouble(double value) {
         return Double.longBitsToDouble( swapLong( Double.doubleToLongBits( value ) ) );

@@ -112,4 +106,3 @@
      */
-    public static void writeSwappedShort( byte[] data, int offset, short value )
-    {
+    public static void writeSwappedShort(byte[] data, int offset, short value) {
         data[ offset + 0 ] = (byte)( ( value >> 0 ) & 0xff );

@@ -125,4 +118,3 @@
      */
-    public static short readSwappedShort( byte[] data, int offset )
-    {
+    public static short readSwappedShort(byte[] data, int offset) {
         return (short)( ( ( data[ offset + 0 ] & 0xff ) << 0 ) +

@@ -132,4 +124,4 @@
     /**
-     * Reads an unsigned short (16-bit) value from a byte array at a given 
-     * offset. The value is converted to the opposed endian system while 
+     * Reads an unsigned short (16-bit) value from a byte array at a given
+     * offset. The value is converted to the opposed endian system while
      * reading.

@@ -139,4 +131,3 @@
      */
-    public static int readSwappedUnsignedShort( byte[] data, int offset )
-    {
+    public static int readSwappedUnsignedShort(byte[] data, int offset) {
         return (int)( ( ( data[ offset + 0 ] & 0xff ) << 0 ) +

@@ -152,4 +143,3 @@
      */
-    public static void writeSwappedInteger( byte[] data, int offset, int value )
-    {
+    public static void writeSwappedInteger(byte[] data, int offset, int value) {
         data[ offset + 0 ] = (byte)( ( value >> 0 ) & 0xff );

@@ -167,4 +157,3 @@
      */
-    public static int readSwappedInteger( byte[] data, int offset )
-    {
+    public static int readSwappedInteger(byte[] data, int offset) {
         return (int)( ( ( data[ offset + 0 ] & 0xff ) << 0 ) +

@@ -176,4 +165,4 @@
     /**
-     * Reads an unsigned integer (32-bit) value from a byte array at a given 
-     * offset. The value is converted to the opposed endian system while 
+     * Reads an unsigned integer (32-bit) value from a byte array at a given
+     * offset. The value is converted to the opposed endian system while
      * reading.

@@ -183,4 +172,3 @@
      */
-    public static long readSwappedUnsignedInteger( byte[] data, int offset )
-    {
+    public static long readSwappedUnsignedInteger(byte[] data, int offset) {
         return (long)( ( ( data[ offset + 0 ] & 0xff ) << 0 ) +

@@ -198,4 +186,3 @@
      */
-    public static void writeSwappedLong( byte[] data, int offset, long value )
-    {
+    public static void writeSwappedLong(byte[] data, int offset, long value) {
         data[ offset + 0 ] = (byte)( ( value >> 0 ) & 0xff );

@@ -217,5 +204,4 @@
      */
-    public static long readSwappedLong( byte[] data, int offset )
-    {
-        long low = (long)( 
+    public static long readSwappedLong(byte[] data, int offset) {
+        long low = (long)(
             ( ( data[ offset + 0 ] & 0xff ) << 0 ) +

@@ -239,4 +225,3 @@
      */
-    public static void writeSwappedFloat( byte[] data, int offset, float value )
-    {
+    public static void writeSwappedFloat(byte[] data, int offset, float value) {
         writeSwappedInteger( data, offset, Float.floatToIntBits( value ) );

@@ -251,4 +236,3 @@
      */
-    public static float readSwappedFloat( byte[] data, int offset )
-    {
+    public static float readSwappedFloat(byte[] data, int offset) {
         return Float.intBitsToFloat( readSwappedInteger( data, offset ) );

@@ -263,4 +247,3 @@
      */
-    public static void writeSwappedDouble( byte[] data, int offset, double value )
-    {
+    public static void writeSwappedDouble(byte[] data, int offset, double value) {
         writeSwappedLong( data, offset, Double.doubleToLongBits( value ) );

@@ -275,4 +258,3 @@
      */
-    public static double readSwappedDouble( byte[] data, int offset )
-    {
+    public static double readSwappedDouble(byte[] data, int offset) {
         return Double.longBitsToDouble( readSwappedLong( data, offset ) );

@@ -287,3 +269,3 @@
      */
-    public static void writeSwappedShort( OutputStream output, short value )
+    public static void writeSwappedShort(OutputStream output, short value)
         throws IOException

@@ -301,3 +283,3 @@
      */
-    public static short readSwappedShort( InputStream input )
+    public static short readSwappedShort(InputStream input)
         throws IOException

@@ -315,3 +297,3 @@
      */
-    public static int readSwappedUnsignedShort( InputStream input )
+    public static int readSwappedUnsignedShort(InputStream input)
         throws IOException

@@ -332,3 +314,3 @@
      */
-    public static void writeSwappedInteger( OutputStream output, int value )
+    public static void writeSwappedInteger(OutputStream output, int value)
         throws IOException

@@ -348,3 +330,3 @@
      */
-    public static int readSwappedInteger( InputStream input )
+    public static int readSwappedInteger(InputStream input)
         throws IOException

@@ -369,3 +351,3 @@
      */
-    public static long readSwappedUnsignedInteger( InputStream input )
+    public static long readSwappedUnsignedInteger(InputStream input)
         throws IOException

@@ -390,3 +372,3 @@
      */
-    public static void writeSwappedLong( OutputStream output, long value )
+    public static void writeSwappedLong(OutputStream output, long value)
         throws IOException

@@ -410,3 +392,3 @@
      */
-    public static long readSwappedLong( InputStream input )
+    public static long readSwappedLong(InputStream input)
         throws IOException

@@ -425,3 +407,3 @@
      */
-    public static void writeSwappedFloat( OutputStream output, float value )
+    public static void writeSwappedFloat(OutputStream output, float value)
         throws IOException

@@ -438,3 +420,3 @@
      */
-    public static float readSwappedFloat( InputStream input )
+    public static float readSwappedFloat(InputStream input)
         throws IOException

@@ -451,3 +433,3 @@
      */
-    public static void writeSwappedDouble( OutputStream output, double value )
+    public static void writeSwappedDouble(OutputStream output, double value)
         throws IOException

@@ -464,3 +446,3 @@
      */
-    public static double readSwappedDouble( InputStream input )
+    public static double readSwappedDouble(InputStream input)
         throws IOException

@@ -470,3 +452,3 @@
 
-    private static int read( InputStream input )
+    private static int read(InputStream input)
         throws IOException

@@ -475,4 +457,3 @@
 
-        if( -1 == value )
-        {
+        if( -1 == value ) {
             throw new EOFException( "Unexpected EOF reached" );

