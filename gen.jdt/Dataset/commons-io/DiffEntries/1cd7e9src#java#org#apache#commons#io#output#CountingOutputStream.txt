Previous File: OUTPUT/commons-io/prevFiles/prev_1cd7e9src#java#org#apache#commons#io#output#CountingOutputStream.java
Revised File: OUTPUT/commons-io/revFiles/1cd7e9src#java#org#apache#commons#io#output#CountingOutputStream.java
DiffEntry: @@ -30,3 +30,3 @@
 
-    private int count;
+    private long count;
 

@@ -60,6 +60,12 @@
      * The number of bytes that have passed through this stream.
+     * <p>
+     * <strong>WARNING</strong> This method will return an
+     * incorrect count for files over 2GB - use
+     * <code>getByteCount()</code> instead.
+     *
      * @return the number of bytes accumulated
+     * @deprecated use <code>getByteCount()</code> - see issue IO-84
      */
     public int getCount() {
-        return this.count;
+        return (int)getByteCount();
     }

@@ -68,7 +74,40 @@
       * Set the count back to 0. 
+      * <p>
+      * <strong>WARNING</strong> This method will return an
+      * incorrect count for files over 2GB - use
+      * <code>resetByteCount()</code> instead.
       *
       * @return the count previous to resetting.
+      * @deprecated use <code>resetByteCount()</code> - see issue IO-84
       */
     public synchronized int resetCount() {
-        int tmp = this.count;
+        return (int)resetByteCount();
+    }
+
+    /**
+     * The number of bytes that have passed through this stream.
+     * <p>
+     * <strong>N.B.</strong> This method was introduced as an
+     * alternative for the <code>getCount()</code> method
+     * because that method returns an integer which will result
+     * in incorrect count for files over 2GB being returned.
+     *
+     * @return the number of bytes accumulated
+     */
+    public long getByteCount() {
+        return this.count;
+    }
+
+    /** 
+     * Set the count back to 0. 
+     * <p>
+     * <strong>N.B.</strong> This method was introduced as an
+     * alternative for the <code>resetCount()</code> method
+     * because that method returns an integer which will result
+     * in incorrect count for files over 2GB being returned.
+     *
+     * @return the count previous to resetting.
+     */
+    public synchronized long resetByteCount() {
+        long tmp = this.count;
         this.count = 0;

