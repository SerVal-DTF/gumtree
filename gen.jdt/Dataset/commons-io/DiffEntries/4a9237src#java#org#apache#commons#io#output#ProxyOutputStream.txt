Previous File: OUTPUT/commons-io/prevFiles/prev_4a9237src#java#org#apache#commons#io#output#ProxyOutputStream.java
Revised File: OUTPUT/commons-io/revFiles/4a9237src#java#org#apache#commons#io#output#ProxyOutputStream.java
DiffEntry: @@ -1,3 +1,3 @@
 /*
- * Copyright 2002-2004 The Apache Software Foundation.
+ * Copyright 2002-2005 The Apache Software Foundation.
  * 

@@ -22,3 +22,2 @@
 /**
- * 
  * A Proxy stream which acts as expected, that is it passes the method 

@@ -27,2 +26,6 @@
  * to increase reusability.
+ * 
+ * @author Henri Yandell
+ * @author Stephen Colebourne
+ * @version $Id$
  */

@@ -30,7 +33,6 @@
 
-    private OutputStream proxy;
-
     /**
      * Constructs a new ProxyOutputStream.
-     * @param proxy OutputStream to delegate to
+     * 
+     * @param proxy  the OutputStream to delegate to
      */

@@ -38,3 +40,3 @@
         super(proxy);
-        this.proxy = proxy;
+        // the proxy is stored in a protected superclass variable named 'out'
     }

@@ -43,3 +45,3 @@
     public void write(int idx) throws IOException {
-        this.proxy.write(idx);
+        out.write(idx);
     }

@@ -48,3 +50,3 @@
     public void write(byte[] bts) throws IOException {
-        this.proxy.write(bts);
+        out.write(bts);
     }

@@ -53,3 +55,3 @@
     public void write(byte[] bts, int st, int end) throws IOException {
-        this.proxy.write(bts, st, end);
+        out.write(bts, st, end);
     }

@@ -58,3 +60,3 @@
     public void flush() throws IOException {
-        this.proxy.flush();
+        out.flush();
     }

@@ -63,3 +65,3 @@
     public void close() throws IOException {
-        this.proxy.close();
+        out.close();
     }

