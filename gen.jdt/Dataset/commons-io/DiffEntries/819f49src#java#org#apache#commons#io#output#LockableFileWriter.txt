Previous File: OUTPUT/commons-io/prevFiles/prev_819f49src#java#org#apache#commons#io#output#LockableFileWriter.java
Revised File: OUTPUT/commons-io/revFiles/819f49src#java#org#apache#commons#io#output#LockableFileWriter.java
DiffEntry: @@ -21,2 +21,3 @@
 import java.io.IOException;
+import java.io.OutputStream;
 import java.io.OutputStreamWriter;

@@ -25,2 +26,3 @@
 import org.apache.commons.io.FileUtils;
+import org.apache.commons.io.IOUtils;
 

@@ -54,5 +56,5 @@
     /** The writer to decorate. */
-    private Writer out;
+    private final Writer out;
     /** The lock file. */
-    private File lockFile;
+    private final File lockFile;
 

@@ -173,18 +175,9 @@
         testLockDir(lockDirFile);
-        this.lockFile = new File(lockDirFile, file.getName() + LCK);
+        lockFile = new File(lockDirFile, file.getName() + LCK);
+        
+        // check if locked
+        createLock();
         
         // init wrapped writer
-        try {
-            createLock();
-            if (encoding == null) {
-                out = new FileWriter(file.getAbsolutePath(), append);
-            } else {
-                FileOutputStream fos = new FileOutputStream(file.getAbsolutePath(), append);
-                out = new OutputStreamWriter(fos, encoding);
-            }
-        } catch (IOException ioe) {
-            this.lockFile.delete();
-            throw ioe;
-        }
-        this.out = new FileWriter(file.getAbsolutePath(), append);
+        out = initWriter(file, encoding, append);
     }

@@ -226,2 +219,43 @@
     /**
+     * Initialise the wrapped file writer.
+     * Ensure that a cleanup occurs if the writer creation fails.
+     *
+     * @param file  the file to be accessed
+     * @param encoding  the encoding to use
+     * @param append  true to append
+     * @throws IOException if an error occurs
+     */
+    private Writer initWriter(File file, String encoding, boolean append) throws IOException {
+        boolean fileExistedAlready = file.exists();
+        OutputStream stream = null;
+        Writer writer = null;
+        try {
+            if (encoding == null) {
+                writer = new FileWriter(file.getAbsolutePath(), append);
+            } else {
+                stream = new FileOutputStream(file.getAbsolutePath(), append);
+                writer = new OutputStreamWriter(stream, encoding);
+            }
+        } catch (IOException ex) {
+            IOUtils.closeQuietly(writer);
+            IOUtils.closeQuietly(stream);
+            lockFile.delete();
+            if (fileExistedAlready == false) {
+                file.delete();
+            }
+            throw ex;
+        } catch (RuntimeException ex) {
+            IOUtils.closeQuietly(writer);
+            IOUtils.closeQuietly(stream);
+            lockFile.delete();
+            if (fileExistedAlready == false) {
+                file.delete();
+            }
+            throw ex;
+        }
+        return writer;
+    }
+
+    //-----------------------------------------------------------------------
+    /**
      * Closes the file writer.

