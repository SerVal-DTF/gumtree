Previous File: OUTPUT/commons-io/prevFiles/prev_d357d9src#main#java#org#apache#commons#io#input#ObservableInputStream.java
Revised File: OUTPUT/commons-io/revFiles/d357d9src#main#java#org#apache#commons#io#input#ObservableInputStream.java
DiffEntry: @@ -20,3 +20,2 @@
 import java.io.InputStream;
-import java.security.MessageDigest;
 import java.util.ArrayList;

@@ -38,3 +37,5 @@
 public class ObservableInputStream extends ProxyInputStream {
+
     public static abstract class Observer {
+
         /** Called to indicate, that {@link InputStream#read()} has been invoked

@@ -43,4 +44,6 @@
          *    because, in that case, {@link #finished()} will be invoked instead.
+         * @throws IOException if an i/o-error occurs
          */
         void data(int pByte) throws IOException {}
+ 
         /** Called to indicate, that {@link InputStream#read(byte[])}, or

@@ -52,4 +55,6 @@
          * @param pLength The number of bytes, which have been stored in the byte array.
+         * @throws IOException if an i/o-error occurs
          */
         void data(byte[] pBuffer, int pOffset, int pLength) throws IOException {}
+
         /** Called to indicate, that EOF has been seen on the underlying stream.

@@ -58,9 +63,14 @@
          * EOF.
+         * @throws IOException if an i/o-error occurs
          */
         void finished() throws IOException {}
+
         /** Called to indicate, that the {@link ObservableInputStream} has been closed.
+         * @throws IOException if an i/o-error occurs
          */
         void closed() throws IOException {}
+
         /**
          * Called to indicate, that an error occurred on the underlying stream.
+         * @throws IOException if an i/o-error occurs
          */

@@ -70,3 +80,7 @@
     private final List<Observer> observers = new ArrayList<>();
-    
+
+    /**
+     * Creates a new ObservableInputStream for the given InputStream.
+     * @param pProxy the input stream to proxy
+     */
     public ObservableInputStream(InputStream pProxy) {

@@ -75,2 +89,6 @@
 
+    /**
+     * Adds an Observer.
+     * @param pObserver the observer to add
+     */
     public void add(Observer pObserver) {

@@ -79,2 +97,6 @@
 
+    /**
+     * Removes an Observer.
+     * @param pObserver the observer to remove
+     */
     public void remove(Observer pObserver) {

@@ -83,2 +105,5 @@
 
+    /**
+     * Removes all Observers.
+     */
     public void removeAllObservers() {

@@ -203,2 +228,5 @@
 
+    /** Gets all currently registered observers.
+     * @return a list of the currently registered observers
+     */
     protected List<Observer> getObservers() {

