Previous File: OUTPUT/commons-io/prevFiles/prev_361dd6src#java#org#apache#commons#io#FileUtils.java
Revised File: OUTPUT/commons-io/revFiles/361dd6src#java#org#apache#commons#io#FileUtils.java
DiffEntry: @@ -66,2 +66,3 @@
  * @author Ian Springer
+ * @autor Chris Eldredge
  * @version $Id$

@@ -607,2 +608,5 @@
         File[] files = srcDir.listFiles();
+        if (files == null) {  // null if security restricted
+            throw new IOException("Failed to list contents of " + srcDir);
+        }
         for (int i = 0; i < files.length; i++) {

@@ -688,4 +692,3 @@
      */
-    public static void cleanDirectory(File directory)
-        throws IOException {
+    public static void cleanDirectory(File directory) throws IOException {
         if (!directory.exists()) {

@@ -700,5 +703,8 @@
 
-        IOException exception = null;
-
         File[] files = directory.listFiles();
+        if (files == null) {  // null if security restricted
+            throw new IOException("Failed to list contents of " + directory);
+        }
+
+        IOException exception = null;
         for (int i = 0; i < files.length; i++) {

@@ -931,4 +937,3 @@
      */
-    private static void cleanDirectoryOnExit(File directory)
-            throws IOException {
+    private static void cleanDirectoryOnExit(File directory) throws IOException {
         if (!directory.exists()) {

@@ -943,5 +948,8 @@
 
-        IOException exception = null;
-
         File[] files = directory.listFiles();
+        if (files == null) {  // null if security restricted
+            throw new IOException("Failed to list contents of " + directory);
+        }
+
+        IOException exception = null;
         for (int i = 0; i < files.length; i++) {

@@ -992,3 +1000,3 @@
      * @param directory directory to inspect
-     * @return size of directory in bytes.
+     * @return size of directory in bytes, 0 if directory is security restricted
      */

@@ -1008,2 +1016,5 @@
         File[] files = directory.listFiles();
+        if (files == null) {  // null if security restricted
+            return 0L;
+        }
         for (int i = 0; i < files.length; i++) {

