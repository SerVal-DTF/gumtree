Previous File: OUTPUT/commons-io/prevFiles/prev_7c58d8src#main#java#org#apache#commons#io#DirectoryWalker.java
Revised File: OUTPUT/commons-io/revFiles/7c58d8src#main#java#org#apache#commons#io#DirectoryWalker.java
DiffEntry: @@ -392,3 +392,4 @@
      */
-    protected final void checkIfCancelled(final File file, final int depth, final Collection<T> results) throws IOException {
+    protected final void checkIfCancelled(final File file, final int depth, final Collection<T> results) throws
+            IOException {
         if (handleIsCancelled(file, depth, results)) {

@@ -487,3 +488,4 @@
      */
-    protected boolean handleDirectory(final File directory, final int depth, final Collection<T> results) throws IOException {
+    protected boolean handleDirectory(final File directory, final int depth, final Collection<T> results) throws
+            IOException {
         // do nothing - overridable by subclass

@@ -502,3 +504,4 @@
      */
-    protected void handleDirectoryStart(final File directory, final int depth, final Collection<T> results) throws IOException {
+    protected void handleDirectoryStart(final File directory, final int depth, final Collection<T> results) throws
+            IOException {
         // do nothing - overridable by subclass

@@ -518,3 +521,4 @@
      */
-    protected File[] filterDirectoryContents(final File directory, final int depth, final File[] files) throws IOException {
+    protected File[] filterDirectoryContents(final File directory, final int depth, final File[] files) throws
+            IOException {
         return files;

@@ -546,3 +550,4 @@
      */
-    protected void handleRestricted(final File directory, final int depth, final Collection<T> results) throws IOException  {
+    protected void handleRestricted(final File directory, final int depth, final Collection<T> results) throws
+            IOException {
         // do nothing - overridable by subclass

@@ -560,3 +565,4 @@
      */
-    protected void handleDirectoryEnd(final File directory, final int depth, final Collection<T> results) throws IOException {
+    protected void handleDirectoryEnd(final File directory, final int depth, final Collection<T> results) throws
+            IOException {
         // do nothing - overridable by subclass

