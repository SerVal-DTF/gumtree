Previous File: OUTPUT/commons-io/prevFiles/prev_76c4ecsrc#main#java#org#apache#commons#io#output#DemuxOutputStream.java
Revised File: OUTPUT/commons-io/revFiles/76c4ecsrc#main#java#org#apache#commons#io#output#DemuxOutputStream.java
DiffEntry: @@ -22,4 +22,3 @@
 /**
- * Data written to this stream is forwarded to a stream that has been associated
- * with this thread.
+ * Data written to this stream is forwarded to a stream that has been associated with this thread.
  *

@@ -27,5 +26,3 @@
  */
-public class DemuxOutputStream
-    extends OutputStream
-{
+public class DemuxOutputStream extends OutputStream {
     private final InheritableThreadLocal<OutputStream> m_streams = new InheritableThreadLocal<OutputStream>();

@@ -35,9 +32,9 @@
      *
-     * @param output the stream to bind
+     * @param output
+     *            the stream to bind
      * @return the OutputStream that was previously active
      */
-    public OutputStream bindStream( final OutputStream output )
-    {
+    public OutputStream bindStream(final OutputStream output) {
         final OutputStream stream = m_streams.get();
-        m_streams.set( output );
+        m_streams.set(output);
         return stream;

@@ -48,11 +45,9 @@
      *
-     * @throws IOException if an error occurs
+     * @throws IOException
+     *             if an error occurs
      */
     @Override
-    public void close()
-        throws IOException
-    {
+    public void close() throws IOException {
         final OutputStream output = m_streams.get();
-        if( null != output )
-        {
+        if (null != output) {
             output.close();

@@ -64,11 +59,9 @@
      *
-     * @throws IOException if an error occurs
+     * @throws IOException
+     *             if an error occurs
      */
     @Override
-    public void flush()
-        throws IOException
-    {
+    public void flush() throws IOException {
         final OutputStream output = m_streams.get();
-        if( null != output )
-        {
+        if (null != output) {
             output.flush();

@@ -80,13 +73,12 @@
      *
-     * @param ch the byte to write to stream
-     * @throws IOException if an error occurs
+     * @param ch
+     *            the byte to write to stream
+     * @throws IOException
+     *             if an error occurs
      */
     @Override
-    public void write( final int ch )
-        throws IOException
-    {
+    public void write(final int ch) throws IOException {
         final OutputStream output = m_streams.get();
-        if( null != output )
-        {
-            output.write( ch );
+        if (null != output) {
+            output.write(ch);
         }

