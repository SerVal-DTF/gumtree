Previous File: OUTPUT/commons-io/prevFiles/prev_b4b470src#java#org#apache#commons#io#FileSystemUtils.java
Revised File: OUTPUT/commons-io/revFiles/b4b470src#java#org#apache#commons#io#FileSystemUtils.java
DiffEntry: @@ -20,3 +20,5 @@
 import java.io.IOException;
+import java.io.InputStream;
 import java.io.InputStreamReader;
+import java.io.OutputStream;
 import java.util.ArrayList;

@@ -115,4 +117,4 @@
      * <p>
-     * Note that some OS's are NOT currently supported, including OS/390
-     * and SunOS 5. (SunOS is supported by <code>freeSpaceKb</code>.)
+     * Note that some OS's are NOT currently supported, including OS/390,
+     * OpenVMS and and SunOS 5. (SunOS is supported by <code>freeSpaceKb</code>.)
      * <pre>

@@ -376,2 +378,3 @@
 
+    //-----------------------------------------------------------------------
     /**

@@ -385,8 +388,23 @@
     List performCommand(String[] cmdAttribs, int max) throws IOException {
-        List lines = new ArrayList();
-        BufferedReader in = null;
+        // this method does what it can to avoid the 'Too many open files' error
+        // based on trial and error and these links:
+        // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4784692
+        // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4801027
+        // http://forum.java.sun.com/thread.jspa?threadID=533029&messageID=2572018
+        // however, its still not perfect as the JDK support is so poor
+        // (see commond-exec or ant for a better multi-threaded multi-os solution)
+        
+        List lines = new ArrayList(20);
+        Process proc = null;
+        InputStream in = null;
+        OutputStream out = null;
+        InputStream err = null;
+        BufferedReader inr = null;
         try {
-            Process proc = openProcess(cmdAttribs);
-            in = openProcessStream(proc);
-            String line = in.readLine();
+            proc = openProcess(cmdAttribs);
+            in = proc.getInputStream();
+            out = proc.getOutputStream();
+            err = proc.getErrorStream();
+            inr = new BufferedReader(new InputStreamReader(in));
+            String line = inr.readLine();
             while (line != null && lines.size() < max) {

@@ -394,3 +412,3 @@
                 lines.add(line);
-                line = in.readLine();
+                line = inr.readLine();
             }

@@ -418,2 +436,8 @@
             IOUtils.closeQuietly(in);
+            IOUtils.closeQuietly(out);
+            IOUtils.closeQuietly(err);
+            IOUtils.closeQuietly(inr);
+            if (proc != null) {
+                proc.destroy();
+            }
         }

@@ -430,14 +454,2 @@
         return Runtime.getRuntime().exec(cmdAttribs);
-    }
-
-    /**
-     * Opens the stream to the operating system.
-     *
-     * @param proc  the process
-     * @return a reader
-     * @throws IOException if an error occurs
-     */
-    BufferedReader openProcessStream(Process proc) throws IOException {
-        return new BufferedReader(
-            new InputStreamReader(proc.getInputStream()));
     }

