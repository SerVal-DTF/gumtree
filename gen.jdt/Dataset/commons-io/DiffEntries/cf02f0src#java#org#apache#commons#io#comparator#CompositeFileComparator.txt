Previous File: OUTPUT/commons-io/prevFiles/prev_cf02f0src#java#org#apache#commons#io#comparator#CompositeFileComparator.java
Revised File: OUTPUT/commons-io/revFiles/cf02f0src#java#org#apache#commons#io#comparator#CompositeFileComparator.java
DiffEntry: @@ -46,3 +46,3 @@
 
-    private static final Comparator[] NO_COMPARATORS = {};
+    private static final Comparator<?>[] NO_COMPARATORS = {};
     private final Comparator<File>[] delegates;

@@ -54,7 +54,8 @@
      */
+    @SuppressWarnings("unchecked") // casts 1 & 2 must be OK because types are already correct
     public CompositeFileComparator(Comparator<File>... delegates) {
         if (delegates == null) {
-            this.delegates = NO_COMPARATORS;
+            this.delegates = (Comparator<File>[]) NO_COMPARATORS;//1
         } else {
-            this.delegates = new Comparator[delegates.length];
+            this.delegates = (Comparator<File>[]) new Comparator<?>[delegates.length];//2
             System.arraycopy(delegates, 0, this.delegates, 0, delegates.length);

@@ -68,5 +69,6 @@
      */
+    @SuppressWarnings("unchecked") // casts 1 & 2 must be OK because types are already correct
     public CompositeFileComparator(Iterable<Comparator<File>> delegates) {
         if (delegates == null) {
-            this.delegates = NO_COMPARATORS;
+            this.delegates = (Comparator<File>[]) NO_COMPARATORS; //1
         } else {

@@ -76,3 +78,3 @@
             }
-            this.delegates = list.toArray(new Comparator[list.size()]);
+            this.delegates = (Comparator<File>[]) list.toArray(new Comparator<?>[list.size()]); //2
         }

