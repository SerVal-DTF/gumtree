Previous File: OUTPUT/commons-io/prevFiles/prev_7c58d8src#main#java#org#apache#commons#io#FileCleaningTracker.java
Revised File: OUTPUT/commons-io/revFiles/7c58d8src#main#java#org#apache#commons#io#FileCleaningTracker.java
DiffEntry: @@ -44,3 +44,3 @@
 public class FileCleaningTracker {
-    
+
     // Note: fields are package protected to allow use by test cases

@@ -131,3 +131,3 @@
      * Adds a tracker to the list of trackers.
-     * 
+     *
      * @param path  the full path to the file to be tracked, not null

@@ -136,3 +136,4 @@
      */
-    private synchronized void addTracker(final String path, final Object marker, final FileDeleteStrategy deleteStrategy) {
+    private synchronized void addTracker(final String path, final Object marker, final FileDeleteStrategy
+            deleteStrategy) {
         // synchronized block protects reaper

@@ -187,3 +188,3 @@
      * This method allows the thread to be terminated. Simply call this method
-     * in the resource cleanup code, such as 
+     * in the resource cleanup code, such as
      * {@code javax.servlet.ServletContextListener.contextDestroyed(javax.servlet.ServletContextEvent)}.

@@ -259,3 +260,4 @@
          */
-        Tracker(final String path, final FileDeleteStrategy deleteStrategy, final Object marker, final ReferenceQueue<? super Object> queue) {
+        Tracker(final String path, final FileDeleteStrategy deleteStrategy, final Object marker,
+                final ReferenceQueue<? super Object> queue) {
             super(marker, queue);

