Previous File: OUTPUT/commons-io/prevFiles/prev_4a9237src#java#org#apache#commons#io#input#ProxyInputStream.java
Revised File: OUTPUT/commons-io/revFiles/4a9237src#java#org#apache#commons#io#input#ProxyInputStream.java
DiffEntry: @@ -1,3 +1,3 @@
 /*
- * Copyright 2002-2004 The Apache Software Foundation.
+ * Copyright 2002-2005 The Apache Software Foundation.
  * 

@@ -25,3 +25,3 @@
  * being called. 
- * 
+ * <p>
  * It is an alternative base class to FilterInputStream

@@ -29,2 +29,6 @@
  * methods being called, such as read(byte[]) to read(byte[], int, int).
+ * 
+ * @author Henri Yandell
+ * @author Stephen Colebourne
+ * @version $Id$
  */

@@ -32,7 +36,6 @@
 
-    private InputStream proxy;
-
     /**
      * Constructs a new ProxyInputStream.
-     * @param proxy InputStream to delegate to
+     * 
+     * @param proxy  the InputStream to delegate to
      */

@@ -40,3 +43,3 @@
         super(proxy);
-        this.proxy = proxy;
+        // the proxy is stored in a protected superclass variable named 'in'
     }

@@ -45,3 +48,3 @@
     public int read() throws IOException {
-        return this.proxy.read();
+        return in.read();
     }

@@ -50,3 +53,3 @@
     public int read(byte[] bts) throws IOException {
-        return this.proxy.read(bts);
+        return in.read(bts);
     }

@@ -55,3 +58,3 @@
     public int read(byte[] bts, int st, int end) throws IOException {
-        return this.proxy.read(bts, st, end);
+        return in.read(bts, st, end);
     }

@@ -60,3 +63,3 @@
     public long skip(long ln) throws IOException {
-        return this.proxy.skip(ln);
+        return in.skip(ln);
     }

@@ -65,3 +68,3 @@
     public int available() throws IOException {
-        return this.proxy.available();
+        return in.available();
     }

@@ -70,3 +73,3 @@
     public void close() throws IOException {
-        this.proxy.close();
+        in.close();
     }

@@ -75,3 +78,3 @@
     public synchronized void mark(int idx) {
-        this.proxy.mark(idx);
+        in.mark(idx);
     }

@@ -80,3 +83,3 @@
     public synchronized void reset() throws IOException {
-        this.proxy.reset();
+        in.reset();
     }

@@ -85,3 +88,3 @@
     public boolean markSupported() {
-        return this.proxy.markSupported();
+        return in.markSupported();
     }

